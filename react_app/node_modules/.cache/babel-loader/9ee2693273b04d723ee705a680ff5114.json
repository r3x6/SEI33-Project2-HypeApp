{"ast":null,"code":"var _jsxFileName = \"/Users/Rex/Documents/GitHub/SEI33-Project2-HypeApp/react_app/src/components/DashBoard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { mainPgActions } from \"../store/mainPg\";\nimport Main from \"./Main\";\nimport SideBar from \"./SideBar\";\nimport TopBar from \"./TopBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashBoard = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const storeAnimeTvData = useSelector(state => state.mainPg.animeTvData);\n  const storeAnimeMovData = useSelector(state => state.mainPg.animeMovData);\n  const storePopMovData = useSelector(state => state.mainPg.popMovData);\n  useEffect(() => {\n    const fetchAnime = async para => {\n      const res = await fetch(`https://jikan1.p.rapidapi.com/top/anime/1/${para}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"jikan1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"12a773075amsh8d41c0d94670d2cp1672adjsna2f437ece9ab\"\n        }\n      });\n      const data = await res.json();\n      return data.top;\n    };\n\n    const handleAnimeTvData = async () => {\n      const receivedData = await fetchAnime(\"tv\");\n      dispatch(mainPgActions.fetchAnimeTvData(receivedData));\n    };\n\n    handleAnimeTvData();\n\n    const handleAnimeMovData = async () => {\n      const receivedData = await fetchAnime(\"movie\");\n      dispatch(mainPgActions.fetchAnimeMovData(receivedData));\n    };\n\n    handleAnimeMovData();\n\n    const fetchPopMedia = async para => {\n      const res = await fetch(`https://data-imdb1.p.rapidapi.com/${para}/order/byPopularity/?page_size=50`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"data-imdb1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"12a773075amsh8d41c0d94670d2cp1672adjsna2f437ece9ab\"\n        }\n      });\n      const data = await res.json();\n      return data.results;\n    };\n\n    const fetchShows = async para => {\n      const popArr = await fetchPopMedia(para);\n      const movArr = [];\n\n      for (let item of popArr) {\n        const res = await fetch(`https://data-imdb1.p.rapidapi.com/${para}/id/${item.imdb_id}/`, {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"data-imdb1.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"12a773075amsh8d41c0d94670d2cp1672adjsna2f437ece9ab\"\n          }\n        });\n        const data = await res.json();\n        movArr.push(data.results);\n      }\n\n      console.log(movArr);\n      return movArr;\n    };\n\n    const handlePopMovData = async () => {\n      const receivedData = await fetchShows(\"movies\");\n      dispatch(mainPgActions.fetchPopMovData(receivedData));\n    };\n\n    handlePopMovData();\n\n    const handlePopTvData = async () => {\n      const receivedData = await fetchShows(\"\");\n      dispatch(mainPgActions.fetchPopTvData(receivedData));\n    };\n\n    handlePopTvData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sideBar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"HYPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-9\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Main, {\n            animeTvData: storeAnimeTvData,\n            animeMovData: storeAnimeMovData,\n            popMovData: storePopMovData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashBoard, \"xgnKylV4ahdIst5PC7biX9421Mo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = DashBoard;\nexport default DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["/Users/Rex/Documents/GitHub/SEI33-Project2-HypeApp/react_app/src/components/DashBoard.js"],"names":["React","useEffect","useDispatch","useSelector","mainPgActions","Main","SideBar","TopBar","DashBoard","dispatch","storeAnimeTvData","state","mainPg","animeTvData","storeAnimeMovData","animeMovData","storePopMovData","popMovData","fetchAnime","para","res","fetch","method","headers","data","json","top","handleAnimeTvData","receivedData","fetchAnimeTvData","handleAnimeMovData","fetchAnimeMovData","fetchPopMedia","results","fetchShows","popArr","movArr","item","imdb_id","push","console","log","handlePopMovData","fetchPopMovData","handlePopTvData","fetchPopTvData"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { mainPgActions } from \"../store/mainPg\";\nimport Main from \"./Main\";\nimport SideBar from \"./SideBar\";\nimport TopBar from \"./TopBar\";\n\nconst DashBoard = () => {\n  const dispatch = useDispatch();\n  const storeAnimeTvData = useSelector((state) => state.mainPg.animeTvData);\n  const storeAnimeMovData = useSelector((state) => state.mainPg.animeMovData);\n  const storePopMovData = useSelector((state) => state.mainPg.popMovData);\n\n  useEffect(() => {\n    const fetchAnime = async (para) => {\n      const res = await fetch(\n        `https://jikan1.p.rapidapi.com/top/anime/1/${para}`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"jikan1.p.rapidapi.com\",\n            \"x-rapidapi-key\":\n              \"12a773075amsh8d41c0d94670d2cp1672adjsna2f437ece9ab\",\n          },\n        }\n      );\n      const data = await res.json();\n      return data.top;\n    };\n    const handleAnimeTvData = async () => {\n      const receivedData = await fetchAnime(\"tv\");\n      dispatch(mainPgActions.fetchAnimeTvData(receivedData));\n    };\n    handleAnimeTvData();\n    const handleAnimeMovData = async () => {\n      const receivedData = await fetchAnime(\"movie\");\n      dispatch(mainPgActions.fetchAnimeMovData(receivedData));\n    };\n    handleAnimeMovData();\n\n    const fetchPopMedia = async (para) => {\n      const res = await fetch(\n        `https://data-imdb1.p.rapidapi.com/${para}/order/byPopularity/?page_size=50`,\n        {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"data-imdb1.p.rapidapi.com\",\n            \"x-rapidapi-key\":\n              \"12a773075amsh8d41c0d94670d2cp1672adjsna2f437ece9ab\",\n          },\n        }\n      );\n      const data = await res.json();\n      return data.results;\n    };\n\n    const fetchShows = async (para) => {\n      const popArr = await fetchPopMedia(para);\n      const movArr = [];\n      for (let item of popArr) {\n        const res = await fetch(\n          `https://data-imdb1.p.rapidapi.com/${para}/id/${item.imdb_id}/`,\n          {\n            method: \"GET\",\n            headers: {\n              \"x-rapidapi-host\": \"data-imdb1.p.rapidapi.com\",\n              \"x-rapidapi-key\":\n                \"12a773075amsh8d41c0d94670d2cp1672adjsna2f437ece9ab\",\n            },\n          }\n        );\n        const data = await res.json();\n        movArr.push(data.results);\n      }\n      console.log(movArr);\n      return movArr;\n    };\n\n    const handlePopMovData = async () => {\n      const receivedData = await fetchShows(\"movies\");\n      dispatch(mainPgActions.fetchPopMovData(receivedData));\n    };\n    handlePopMovData();\n    const handlePopTvData = async () => {\n      const receivedData = await fetchShows(\"\");\n      dispatch(mainPgActions.fetchPopTvData(receivedData));\n    };\n    handlePopTvData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-3\">\n          <div className=\"sideBar\">\n            <div className=\"title\">HYPE</div>\n            <SideBar />\n          </div>\n        </div>\n        <div className=\"col-sm-9\">\n          <div className=\"row\">\n            <TopBar />\n          </div>\n          <div className=\"row\">\n            <Main\n              animeTvData={storeAnimeTvData}\n              animeMovData={storeAnimeMovData}\n              popMovData={storePopMovData}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashBoard;\n"]},"metadata":{},"sourceType":"module"}